{
  "__DOC__" : "ABAC policies for CHAPI SA service",

  "create_slice" : {
      "__DOC__" : "Operators, project Leads, members, admins may create slice",
      "policies" : [
        "ME.MAY_$METHOD<-ME.IS_OPERATOR",
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT", 
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT"
      ], 
      "asserters" : ["assert_project_role"],
      "extractor" : "project_urn_extractor"
   },

   "lookup_slices" : {
     "__DOC__" : "Operators, leads/admins, members, auditors may lookup slice",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_AUDITOR_$SUBJECT"
     ],
     "asserters" : ["assert_slice_role"],
     "extractor" : "standard_subject_extractor"
   },

  "update_slice" : {
      "__DOC__" : "Operators and slice leads/admins can update slice",
      "policies" : [
         "ME.MAY_$METHOD<-ME.IS_OPERATOR",
         "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
         "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
      ], 
      "asserters" : ["assert_slice_role"],
      "extractor" : "slice_urn_extractor"
   },

  "get_credentials" :  {
     "__DOC__" : "Slice lead/admin/member or operators can get slice cred",
     "policies" : [
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT",
        "ME.MAY_$METHOD<-ME.IS_OPERATOR"
     ], 
     "asserters" : ["assert_slice_role"],
     "extractor" : "slice_urn_extractor"
    },

  "modify_slice_membership" : {
      "__DOC__" : "Operators and slice Lead/Admin can modify slice membership",
      "policies" : [
        "ME.MAY_$METHOD<-ME.IS_OPERATOR",
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT",
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
     ],
     "asserters" : ["assert_slice_role"],
     "extractor" : "slice_urn_extractor"
    },

  "lookup_slice_members" : {
       "__DOC__" : "Operators and slice members can lookup slice members",
       "policies" : [
          "ME.MAY_$METHOD<-ME.IS_OPERATOR",
          "ME.MAY_$METHOD_$SUBJECT<-ME.BELONGS_TO_$SUBJECT"
       ], 
       "asserters" : ["assert_belongs_to_slice"],
       "extractor" : "slice_urn_extractor"
     },

  "lookup_slices_for_member" : {
       "__DOC__" : "Operators, self and members sharing a slice",
       "policies" : [
         "ME.MAY_$METHOD<-ME.IS_OPERATOR",
         "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT",
         "ME.MAY_$METHOD_$SUBJECT<-ME.SHARES_SLICE_$SUBJECT"
       ],
       "asserters" : ["assert_shares_slice"],
       "extractor" : "member_urn_extractor"
     },

  "create_project" : {
       "__DOC__" : "Operators and PIs can create projects",
       "policies" : [
         "ME.MAY_$METHOD<-ME.IS_OPERATOR",
         "ME.MAY_$METHOD<-ME.IS_PI"
       ]
     },

  "lookup_projects" : {
       "__DOC__" : "Anyone with legitimate cert can call lookup projects",
       "policies" : [
         "ME.MAY_$METHOD<-CALLER" 
       ], 
       "extractor" : "standard_subject_extractor"
     },

   "update_project" : {
     "__DOC__" : "Operators and project leads/admins can update project",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
      ], 
      "asserters" : ["assert_project_role"],
      "extractor" : "project_urn_extractor"
   },

   "modify_project_membership" : {
     "__DOC__" : "Operators, authorities and project leads/admins can modify project membership",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD<-ME.IS_AUTHORITY",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
      ], 
      "asserters" : ["assert_project_role"],
      "extractor" : "project_urn_extractor"
   },


 "lookup_project_members" : {
   "__DOC__" : "Operators and project members can lookup project members",
   "policies" : [
     "ME.MAY_$METHOD_$SUBJECT<-ME.IS_OPERATOR",
     "ME.MAY_$METHOD_$SUBJECT<-ME.BELONGS_TO_$SUBJECT"
    ], 
    "asserters" : ["assert_belongs_to_project"],
    "extractor" : "project_urn_extractor"
  },

  "lookup_projects_for_member" : {
    "__DOC__" : "Operators, self, and people sharing a project",
    "policies" : [
     "ME.MAY_$METHOD<-ME.IS_OPERATOR",
     "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT",
     "ME.MAY_$METHOD_$SUBJECT<-ME.SHARES_PROJECT_$SUBJECT"
    ], 
    "asserters" : ["assert_shares_project"], 
    "extractor" : "member_urn_extractor"
   },

  "create_sliver_info" : {
    "__DOC__" : "Operators, authorities and slice lead/admin/member",
    "policies" : [
      "ME.MAY_$METHOD<-ME.IS_OPERATOR",
      "ME.MAY_$METHOD<-ME.IS_AUTHORITY",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT"
     ], 
     "asserters" : ["assert_slice_role"], 
     "extractor" : "slice_urn_extractor"
   },

   "delete_sliver_info" : {
     "__DOC__" : "Operators, authorities and slcie lead/admin/member",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD<-ME.IS_AUTHORITY",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT"
     ], 
     "asserters" : ["assert_slice_role"], 
     "extractor" : "slice_urn_extractor"
   },

  "update_sliver_info" : {
     "__DOC__" : "Operators, authorities and slcie lead/admin/member",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD<-ME.IS_AUTHORITY",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_MEMBER_$SUBJECT"
     ], 
     "asserters" : ["assert_slice_role"], 
     "extractor" : "slice_urn_extractor"
   },

  "lookup_sliver_info" : {
     "__DOC__" : [
       "Operators, Authorities",
       "Can ask for sliver info by SLIVER_INFO_SLICE_URN if slice member",
       "Can ask for slier info by CREATOR_URN if creator is caller"
     ],
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD<-ME.IS_AUTHORITY",
       "ME.MAY_$METHOD_$SUBJECT<-ME.BELONGS_TO_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT"
     ],
     "asserters" : ["assert_belongs_to_slice"],
     "extractor" : "sliver_info_extractor"
   },

   "create_request" : {
      "__DOC__" : "Open to all",
      "policies" : [
         "ME.MAY_$METHOD<-CALLER"
       ]
   },

   "resolve_pending_request" :  {
     "__DOC__" : "Only if you are operator or the lead/admin of the context or the requestor",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
       "ME.MAY_$METHOD<-ME.IS_REQUESTOR"
     ], 
      "asserters" : ["assert_request_id_requestor_and_project_role"],
      "extractor" : "request_id_extractor"
   },

  "get_requests_for_context" :  {
	"__DOC__" : "Only if you are operator or lead/admin of the context",
	"policies" : [
          "ME.MAY_$METHOD<-ME.IS_OPERATOR",
          "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT",
          "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
         ], 
         "asserters" : ["assert_project_role"], 
	 "extractor" : "request_context_extractor"
   },

   "get_requests_by_user" :  {
      "__DOC__" : "member_id argument == caller",
      "policies" : [
        "ME.MAY_$METHOD<-ME.IS_OPERATOR",
        "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT"
      ], 
      "extractor" : "request_member_extractor"
    },

  "get_pending_requests_for_user" :  {
    "__DOC__" : "Operator and for self",
    "policies" : [
      "ME.MAY_$METHOD<-ME.IS_OPERATOR",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT"
    ], 
    "extractor" : "request_member_extractor"
  },


  "get_number_of_pending_requests_for_user" :  {
    "__DOC__" : "Operator and Self",
    "policies" : [
      "ME.MAY_$METHOD<-ME.IS_OPERATOR",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT"
    ], 
    "extractor" : "request_member_extractor"
  },

  "get_request_by_id" : {
    "__DOC__" : "Only if you are an operator, you are the requestor or the lead/admin of the context",
    "policies" : [
      "ME.MAY_$METHOD<-ME.IS_OPERATOR",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT",
      "ME.MAY_$METHOD<-ME.IS_REQUESTOR"
     ], 
     "asserters" : ["assert_request_id_requestor_and_project_role"],
     "extractor" : "request_id_extractor"
   },

  "invite_member" : {
    "__DOC__" : "Only if you are an operator or a project lead/admin",
    "policies" : [
      "ME.MAY_$METHOD<-ME.IS_OPERATOR",
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_LEAD_$SUBJECT", 
      "ME.MAY_$METHOD_$SUBJECT<-ME.IS_ADMIN_$SUBJECT"
     ], 
     "asserters" : ["assert_project_role"], 
     "extractor" : "project_uid_extractor"
   },

   "accept_invitation" : {
     "__DOC__" : "No options required (invite_id, member_id)",
     "policies" : [
       "ME.MAY_$METHOD<-ME.IS_OPERATOR",
       "ME.MAY_$METHOD_$SUBJECT<-ME.IS_$SUBJECT"
     ],
     "extractor" : "request_member_extractor"
  }     

}

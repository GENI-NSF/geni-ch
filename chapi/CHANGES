# Note: keep this file in wiki format for easy pasting to the proto-ch wiki

= GENI Clearinghouse Release Notes =

== 1.4 ==
  * Support looking up others' public SSH keys in PGCH (#208)

== 1.3 ==
  * Update copyright notices to 2014 (#199)
  * Get caller email in update_slice (#201)
  * Filter out innocuous errors looking up unknown slice (#202)
  * Avoid empty 'in' lists in SQL queries (#200)
  * Treat email addresses as case insensitive (#203)
  * Handle non string subjects in `flatten_urn` (#206)
  * The author of a log message is taken from the client cert.
    When a user asks to join a project, the author will be the Portal.
    That will now properly display as None. (#205)
  * Optimize calls that the portal makes to handle bulk queries,
  etc. (#132)
   * New method to look up both public and identifying member info
   * New method to get login information by EPPN
  * Fix log service guards (#191)

== 1.2 ==
  * Fix role/project names in email for accepting an invitation (#183)
  * Do not allow project auditor to become slice lead (#156)
  * Do not allow adding/removing core member attributes or blank attribute (#157)
  * Return code 12 and a better error message when Resolve gets an authorization error doing lookup slices,
    to indicate that the slice possibly just doesn't exist. (#180,#184)
  * Fix error renewing non-existent slice in PGCH (#182)
  * Check that project join request is still pending before processing (#164) 
  * Ensure a single SQLalchemy session per request, with a rollback on error. (#95,#96,#117)
  * Respect maintenance mode (#151,#188)
  * Add guards on the logging service (#146)
  * Only log stacktraces on bad errors (#119)
  * When expiring projects/slices, log it as a None UID not a member. Additionally,
    re-use the DB session when calling log_event when possible, use a new DB
    session when updating expirations in read-only methods, and clean up
    the date comparison to compare within the DB in update_expirations. (#186)
  * Use a string UUID for logging an activated user. (#192)
  * Use a mapper for Project Attribute table, declare GENI_ENABLE_WIMAX mappable 
    (so you can look up by that field), and declare it a UID (#194)
  * Allow no cert to CH/SR calls (#193)
  * Typo in pgch get_ch_version (#195)

== 1.1 ==
 * Use past tense in logging service log messages (#128)
 * Log mismatched certificates at warn level (#140)
 * Include Auto-submitted header in emails (#124)
 * Times to renew slice should be converted to naive UTC (#139)
 * Email to new operators shouldn't say project lead (#123)
 * Do not use add/remove attribute methods for privileges (#130)
 * Send mail on enable/disable users (#129)
 * PGCH uses handler front door to SA/MA services, enforcing guards and argument checks (#144)
 * Slice certificates last 10 years (#147)
 * Log a warn when renewing slice certificates (#148)
 * Allow canceling a project join request (#137)
 * Error looking up identifying member info (#143)
 * Check errors like bad username in PGCH (#150)
 * Send email on adding new project members (#33)
 * Fix guard on invite_members (#154,#153)
 * Updated project log message says what changed (#88)
 * Do not return empty user cred (#140)
 * Use constants for a couple numbers (#57)
 * Avoid sending mail with no to address (#109)
 * Fix guard on add and remove member attributes to allow authorities and self.
   Fix add and remove member attribute functions to check self-asserted attribute.
   Fix member attribute utilities to handle non standard attributes. (#145)
 * Keep more logs (#158)
 * Usernames properly exclude bad characters like period (#159)
 * Use full name for members in to field when sending email (#127)
 * Send email on registering a new account (#63)
 * Support list of to or cc email addresses (#126)
 * Change ccaddr to cc_list in send_email utility (#161)
 * Input "to" addresses to send_email utility as a list (#162)
 * Typo in PGCH getcredential (#163)

== 1.0 ==
 * Initial release of new clearinghouse implementing the
 [http://groups.geni.net/geni/wiki/UniformClearinghouseAPI Uniform
 Federation APIs]. This implementation retains the functionality of
 the previous PHP-based server, but implemented in Python using
 [https://github.com/fp7-ofelia/AMsoil AMsoil]. Note that the `pgch`
 server is now part of this base install, and all services are now
 reached via XML-RPC over SSL.


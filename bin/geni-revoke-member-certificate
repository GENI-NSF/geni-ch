#!/usr/bin/env python
# -*- Mode: python -*-
#
#----------------------------------------------------------------------
# Copyright (c) 2013-2015 Raytheon BBN Technologies
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and/or hardware specification (the "Work") to
# deal in the Work without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Work, and to permit persons to whom the Work
# is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Work.
#
# THE WORK IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE WORK OR THE USE OR OTHER DEALINGS
# IN THE WORK.
#----------------------------------------------------------------------

#----------------------------------------------------------------------
#
# Revoke a certificate created by the given CA and signed by the MA
#
#
#----------------------------------------------------------------------

import sys
import optparse
import subprocess

def parse_args(argv):
   parser = optparse.OptionParser(usage="Revoke member certificate")
   parser.add_option("-k", "--keyfile", metavar="FILE",
                     help="Cert signer's private key",
                     default="/usr/share/geni-ch/ma/ma-key.pem")
   parser.add_option("-c", "--certfile", metavar="FILE",
                     help="Cert signer's GENI certificate",
                     default="/usr/share/geni-ch/ma/ma-cert.pem")
   parser.add_option("--conf", help="Openssl conf file",
                     default="/usr/share/geni-ch/CA/openssl.cnf")
   parser.add_option("--crl", help="CRL file", 
                     default="/usr/share/geni-ch/ma/ma-crl.pem")
   parser.add_option("--revoke", help="PEM file of certificate to be revoked",
                     default=None)
   options,args = parser.parse_args()
   if not (options.revoke):
      parser.print_usage()
      raise Exception("Missing some required arguments")
   return options,args

def main(argv=None):
   if argv is None: argv = sys.argv

   opts, args = parse_args(argv)

    # Revoke the certificate using the provided cert and key and OpenSSL config
   cmd = ['/usr/bin/openssl', 'ca', '-keyfile', opts.keyfile,
          '-cert', opts.certfile, '-config', opts.conf, 
          '-revoke', opts.revoke]
   return_code = subprocess.call(cmd)

   if return_code != 0: 
      print "Error invoking openssl revoke: %d" % return_code
      return

   print "Certificate %s successfully revoked" % opts.revoke

    # Re-generatge the MA CRL
   cmd = ['/usr/bin/openssl', 'ca', '-keyfile', opts.keyfile,
          '-cert', opts.certfile, '-config', opts.conf, 
          '-gencrl', '-out', opts.crl]
   return_code = subprocess.call(cmd)

   if return_code != 0: 
      print "Error invoking openssl revoke: %d" % return_code
      return

   print "CRL %s successfully regenerated" % opts.crl

    # Restart apache server
   cmd = ['service', 'apache2', 'restart']
   return_code = subprocess.call(cmd)

   if return_code != 0:
      print "Error restarting apache2: %d" % return_code

   print "Apache successfully restarted"

if __name__ == "__main__":
    sys.exit(main())

##### 
#
# DO NOT EDIT except via CVS (cvs.gpolab.bbn.com:/srv/cvs)
# 
# See /var/lib/puppet/vtf/apache_site_ch-ssl
# for a copy of this file containing the RCS info

<IfModule mod_ssl.c>

NameVirtualHost 128.89.96.48:443

<VirtualHost 128.89.96.48:443>
	ServerAdmin portal-sandbox-admin@gpolab.bbn.com
        ServerName  fields.bbn.com

	# Override the default document root to handle users who access
	# the CH url directly
	DocumentRoot /usr/share/geni-ch/ch/www
	<Directory />
		Options FollowSymLinks
		AllowOverride None
	</Directory>

	# Include geni-ch apache configuration for that directory
	Include /usr/share/geni-ch/ch/apache2.conf

	# Use the DocumentRoot index as the 404 page, so that all users
	# accessing non-existent pages at the CH FQDN see it.
	ErrorDocument 404 /index.html

	ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
	<Directory "/usr/lib/cgi-bin">
		AllowOverride None
		Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
		Order allow,deny
		Allow from all
	</Directory>

	ErrorLog /var/log/httpd/ch_error.log

	# Possible values include: debug, info, notice, warn, error, crit,
	# alert, emerg.
	LogLevel warn

	CustomLog /var/log/httpd/ch_ssl_access.log combined

	Alias /doc/ "/usr/share/doc/"
	<Directory "/usr/share/doc/">
		Options Indexes MultiViews FollowSymLinks
		AllowOverride None
		Order deny,allow
		Deny from all
		Allow from 127.0.0.0/255.0.0.0 ::1/128
	</Directory>

	#   SSL Engine Switch:
	#   Enable/Disable SSL for this virtual host.
	SSLEngine on

	#   A self-signed (snakeoil) certificate can be created by installing
	#   the ssl-cert package. See
	#   /usr/share/doc/apache2.2-common/README.Debian.gz for more info.
	#   If both key and certificate are stored in the same file, only the
	#   SSLCertificateFile directive is needed.
        SSLCertificateFile    /etc/pki/tls/certs/ch-fields.crt
        SSLCertificateKeyFile /etc/pki/tls/private/ch-fields.key


	#   Server Certificate Chain:
	#   Point SSLCertificateChainFile at a file containing the
	#   concatenation of PEM encoded CA certificates which form the
	#   certificate chain for the server certificate. Alternatively
	#   the referenced file can be the same as SSLCertificateFile
	#   when the CA certificates are directly appended to the server
	#   certificate for convinience.
	#SSLCertificateChainFile /etc/ssl/certs/ca-gpolab.crt

	#   Certificate Authority (CA):
	#   Set the CA certificate verification path where to find CA
	#   certificates for client authentication or alternatively one
	#   huge file containing all of them (file must be PEM encoded)
	#   Note: Inside SSLCACertificatePath you need hash symlinks
	#         to point to the certificate files. Use the provided
	#         Makefile to update the hash symlinks after changes.
	#SSLCACertificatePath /etc/ssl/certs/
	#SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt

	#   Certificate Revocation Lists (CRL):
	#   Set the CA revocation path where to find CA CRLs for client
	#   authentication or alternatively one huge file containing all
	#   of them (file must be PEM encoded)
	#   Note: Inside SSLCARevocationPath you need hash symlinks
	#         to point to the certificate files. Use the provided
	#         Makefile to update the hash symlinks after changes.
	#SSLCARevocationPath /etc/apache2/ssl.crl/
	#SSLCARevocationFile /etc/apache2/ssl.crl/ca-bundle.crl

	#   Client Authentication (Type):
	#   Client certificate verification type and depth.  Types are
	#   none, optional, require and optional_no_ca.  Depth is a
	#   number which specifies how deeply to verify the certificate
	#   issuer chain before deciding the certificate is not valid.
	#SSLVerifyClient require
	#SSLVerifyDepth  10

	#   Access Control:
	#   With SSLRequire you can do per-directory access control based
	#   on arbitrary complex boolean expressions containing server
	#   variable checks and other lookup directives.  The syntax is a
	#   mixture between C and Perl.  See the mod_ssl documentation
	#   for more details.
	#<Location />
	#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)/ \
	#            and %{SSL_CLIENT_S_DN_O} eq "Snake Oil, Ltd." \
	#            and %{SSL_CLIENT_S_DN_OU} in {"Staff", "CA", "Dev"} \
	#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \
	#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \
	#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
	#</Location>

	#   SSL Engine Options:
	#   Set various options for the SSL engine.
	#   o FakeBasicAuth:
	#     Translate the client X.509 into a Basic Authorisation.  This means that
	#     the standard Auth/DBMAuth methods can be used for access control.  The
	#     user name is the `one line' version of the client's X.509 certificate.
	#     Note that no password is obtained from the user. Every entry in the user
	#     file needs this password: `xxj31ZMTZzkVA'.
	#   o ExportCertData:
	#     This exports two additional environment variables: SSL_CLIENT_CERT and
	#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
	#     server (always existing) and the client (only existing when client
	#     authentication is used). This can be used to import the certificates
	#     into CGI scripts.
	#   o StdEnvVars:
	#     This exports the standard SSL/TLS related `SSL_*' environment variables.
	#     Per default this exportation is switched off for performance reasons,
	#     because the extraction step is an expensive operation and is usually
	#     useless for serving static content. So one usually enables the
	#     exportation for CGI and SSI requests only.
	#   o StrictRequire:
	#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even
	#     under a "Satisfy any" situation, i.e. when it applies access is denied
	#     and no other module can change it.
	#   o OptRenegotiate:
	#     This enables optimized SSL connection renegotiation handling when SSL
	#     directives are used in per-directory context.
	#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
	<FilesMatch "\.(cgi|shtml|phtml|php)$">
		SSLOptions +StdEnvVars
	</FilesMatch>
	<Directory /usr/lib/cgi-bin>
		SSLOptions +StdEnvVars
	</Directory>

	#   SSL Protocol Adjustments:
	#   The safe and default but still SSL/TLS standard compliant shutdown
	#   approach is that mod_ssl sends the close notify alert but doesn't wait for
	#   the close notify alert from client. When you need a different shutdown
	#   approach you can use one of the following variables:
	#   o ssl-unclean-shutdown:
	#     This forces an unclean shutdown when the connection is closed, i.e. no
	#     SSL close notify alert is send or allowed to received.  This violates
	#     the SSL/TLS standard but is needed for some brain-dead browsers. Use
	#     this when you receive I/O errors because of the standard approach where
	#     mod_ssl sends the close notify alert.
	#   o ssl-accurate-shutdown:
	#     This forces an accurate shutdown when the connection is closed, i.e. a
	#     SSL close notify alert is send and mod_ssl waits for the close notify
	#     alert of the client. This is 100% SSL/TLS standard compliant, but in
	#     practice often causes hanging connections with brain-dead browsers. Use
	#     this only for browsers where you know that their SSL implementation
	#     works correctly.
	#   Notice: Most problems of broken clients are also related to the HTTP
	#   keep-alive facility, so you usually additionally want to disable
	#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
	#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
	#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
	#   "force-response-1.0" for this.
	BrowserMatch "MSIE [2-6]" \
		nokeepalive ssl-unclean-shutdown \
		downgrade-1.0 force-response-1.0
	# MSIE 7 and newer should be able to use keepalive
	BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

        # Include configuration files for CHAPI clearinghouse services
        # RRH
        SSLOptions +ExportCertData
        SSLCACertificateFile /usr/share/geni-ch/CA/ca-ma-cert.pem
        SSLVerifyClient optional
        SSLVerifyDepth 3
        ScriptAlias /SA /usr/share/geni-ch/chapi/AMsoil/src/main.py
        ScriptAlias /MA /usr/share/geni-ch/chapi/AMsoil/src/main.py 
        ScriptAlias /CS /usr/share/geni-ch/chapi/AMsoil/src/main.py 
        # Since this vhost requires client certs, move /CH to port 8444
        ScriptAlias /LOG /usr/share/geni-ch/chapi/AMsoil/src/main.py 
        ScriptAlias /PGCH/ch /usr/share/geni-ch/chapi/AMsoil/src/main.py
        ScriptAlias /PGCH /usr/share/geni-ch/chapi/AMsoil/src/main.py 
        # Since this vhost requires client certs, move /SR to port 8444
	ScriptAliasMatch /info/*/* /usr/share/geni-ch/chapi/AMsoil/src/main.py
		
        # Use rewrite engine to show a relatively friendly page to
        # clients who don't display SSL certs, regardless of what URL
        # they requested on this vhost 
        RewriteEngine On
        RewriteCond %{SSL:SSL_CLIENT_VERIFY} !^SUCCESS$
        RewriteRule .* /index.html [L]

</VirtualHost>

# Catch-all default virtual host, so other CNAMEs to this IP are not
# taken to clearinghouse services
<VirtualHost 128.89.96.48:443>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/localhost

        <Directory />
                Options FollowSymLinks
                AllowOverride None
        </Directory>
        <Directory /var/www/localhost>
                Options Indexes FollowSymLinks MultiViews
                AllowOverride None
                Order allow,deny
                allow from all
        </Directory>

        ErrorLog /var/log/httpd/localhost_error.log
        LogLevel warn
        CustomLog /var/log/httpd/localhost_ssl_access.log combined
        SSLEngine on
        SSLCertificateFile    /etc/pki/tls/certs/ch-fields.crt
        SSLCertificateKeyFile /etc/pki/tls/private/ch-fields.key

#        SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem
#        SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

        BrowserMatch "MSIE [2-6]" \
                nokeepalive ssl-unclean-shutdown \
                downgrade-1.0 force-response-1.0
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

        # Return the index page no matter what was requested (no other
        # pages should be installed)
        ErrorDocument 404 /index.html
</VirtualHost>


# CHAPI clearinghouses use a second virtualhost on port 8443 for the
# PGCH service, for backwards compatibility
<VirtualHost 128.89.96.48:8443>
        ServerAdmin portal-sandbox-admin@gpolab.bbn.com
        ServerName  fields.bbn.com

        Include /usr/share/geni-ch/ch/apache2.conf

        ErrorLog /var/log/httpd/ch_error_8443.log
        CustomLog /var/log/httpd/ch_ssl_access_8443.log combined

        LogLevel warn

        SSLEngine on

        # These SSL parameters should match the ones used on port 443
        SSLCertificateFile    /etc/pki/tls/certs/ch-fields.crt
        SSLCertificateKeyFile /etc/pki/tls/private/ch-fields.key

	#SSLCertificateFile    /etc/ssl/certs/ch-ph.gpolab.bbn.com.pem
	#SSLCertificateKeyFile /etc/ssl/certs/ch-ph.gpolab.bbn.com.pem
	#SSLCertificateChainFile /etc/ssl/certs/ca-gpolab.crt

        BrowserMatch "MSIE [2-6]" \
                nokeepalive ssl-unclean-shutdown \
                downgrade-1.0 force-response-1.0
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

        SSLOptions +ExportCertData
        SSLCACertificateFile /usr/share/geni-ch/CA/cacert.pem
        SSLVerifyClient require
        SSLVerifyDepth 3

        DocumentRoot /usr/share/geni-ch/ch/www
        ScriptAlias / /usr/share/geni-ch/chapi/AMsoil/src/main.py
</VirtualHost>

# CHAPI clearinghouses which verify client SSL certificates use a
# virtualhost on port 8444 for the small number of services which do
# not require client certificates
Listen 8444
<VirtualHost 128.89.96.48:8444>
        ServerAdmin portal-sandbox-admin@gpolab.bbn.com
        ServerName  fields.bbn.com

        Include /usr/share/geni-ch/ch/apache2.conf

        # Include xml-signer web app
        #Include /usr/share/xml-signer/etc/apache2.conf

        ErrorLog /var/log/httpd/ch_error_8444.log
        CustomLog /var/log/httpd/ch_ssl_access_8444.log combined

        LogLevel warn

        SSLEngine on

        # These SSL parameters should match the ones used on port 443
        SSLCertificateFile    /etc/pki/tls/certs/ch-fields.crt
        SSLCertificateKeyFile /etc/pki/tls/private/ch-fields.key

        #SSLCertificateFile    /etc/ssl/certs/ch-ph.gpolab.bbn.com.pem
        #SSLCertificateKeyFile /etc/ssl/certs/ch-ph.gpolab.bbn.com.pem
        #SSLCertificateChainFile /etc/ssl/certs/ca-gpolab.crt

        BrowserMatch "MSIE [2-6]" \
                nokeepalive ssl-unclean-shutdown \
                downgrade-1.0 force-response-1.0
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

        SSLOptions +ExportCertData
        SSLCACertificateFile /usr/share/geni-ch/CA/cacert.pem
        SSLVerifyClient optional_no_ca
        SSLVerifyDepth 3

        DocumentRoot /usr/share/geni-ch/ch/www
        ScriptAlias /CH /usr/share/geni-ch/chapi/AMsoil/src/main.py
        ScriptAlias /SR /usr/share/geni-ch/chapi/AMsoil/src/main.py
</VirtualHost>

</IfModule>
